<Window x:Class="wpfCalculator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:wpfCalculator"
        mc:Ignorable="d"
        Title="Калькулятор" Height="500" 
        Width="400" Foreground="White" Background="Black" ResizeMode="NoResize" BorderBrush="Black">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FAFAD2"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FAFAD2"/>
        <SolidColorBrush x:Key="Button.MouseOver.Foreground" Color="Black"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonGrey" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="50" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" Background="#696969" BorderBrush="Black">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="Black"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.MouseOver.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoundedButtonBlack" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="50" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" Background="#121111" BorderBrush="#121111">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="Black"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.MouseOver.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoundedButtonOrange" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="50" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" Background="#FF8C00" BorderBrush="#FF8C00">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="Black"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.MouseOver.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid x:Name="MainGrid" Background="Black">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" x:Name="tb_Result" Foreground="White" Background="Black" FontSize="36" HorizontalAlignment="Right" VerticalAlignment="Center"/>
        <Button x:Name="b_AC" Grid.Row="1" Grid.Column="0" FontSize="24" Foreground="White" Style="{DynamicResource RoundedButtonGrey}" Margin="5,5,5,5" Cursor="Hand" Click="b_AC_Click">AC</Button>
        <Button x:Name="b_ChangeSymbol" Grid.Row="1" Grid.Column="1" FontSize="24" Foreground="White" Style="{DynamicResource RoundedButtonGrey}" Margin="5,5,5,5" Cursor="Hand" Click="b_ChangeSymbol_Click">+/-</Button>
        <Button x:Name="b_Percent" Grid.Row="1" Grid.Column="2" FontSize="24" Foreground="White" Style="{DynamicResource RoundedButtonGrey}" Margin="5,5,5,5" Cursor="Hand" Click="b_Percent_Click">%</Button>
        <Button x:Name="b_Devide" Grid.Row="1" Grid.Column="3" FontSize="24" Foreground="White" Style="{DynamicResource RoundedButtonOrange}" Margin="5,5,5,5" Cursor="Hand" Click="b_Devide_Click">/</Button>
        <Button x:Name="b_num7" Grid.Row="2" Grid.Column="0" FontSize="24" Foreground="White" Style="{DynamicResource RoundedButtonBlack}" Margin="5,5,5,5" Cursor="Hand" Click="b_num7_Click">7</Button>
        <Button x:Name="b_Num8" Grid.Row="2" Grid.Column="1" FontSize="24" Foreground="White" Style="{DynamicResource RoundedButtonBlack}" Margin="5,5,5,5" Cursor="Hand" Click="b_Num8_Click">8</Button>
        <Button x:Name="b_Num9" Grid.Row="2" Grid.Column="2" FontSize="24" Foreground="White" Style="{DynamicResource RoundedButtonBlack}" Margin="5,5,5,5" Cursor="Hand" Click="b_Num9_Click">9</Button>
        <Button x:Name="b_Mult" Grid.Row="2" Grid.Column="3" FontSize="24" Foreground="White" Style="{DynamicResource RoundedButtonOrange}" Margin="5,5,5,5" Cursor="Hand" Click="b_Mult_Click">*</Button>
        <Button x:Name="b_Num4" Grid.Row="3" Grid.Column="0" FontSize="24" Foreground="White" Style="{DynamicResource RoundedButtonBlack}" Margin="5,5,5,5" Cursor="Hand" Click="b_Num4_Click">4</Button>
        <Button x:Name="b_Num5" Grid.Row="3" Grid.Column="1" FontSize="24" Foreground="White" Style="{DynamicResource RoundedButtonBlack}" Margin="5,5,5,5" Cursor="Hand" Click="b_Num5_Click">5</Button>
        <Button x:Name="b_Num6" Grid.Row="3" Grid.Column="2" FontSize="24" Foreground="White" Style="{DynamicResource RoundedButtonBlack}" Margin="5,5,5,5" Cursor="Hand" Click="b_Num6_Click">6</Button>
        <Button x:Name="b_Minus" Grid.Row="3" Grid.Column="3" FontSize="24" Foreground="White" Style="{DynamicResource RoundedButtonOrange}" Margin="5,5,5,5" Cursor="Hand" Click="b_Minus_Click">-</Button>
        <Button x:Name="b_Num2" Grid.Row="4" Grid.Column="1" FontSize="24" Foreground="White" Style="{DynamicResource RoundedButtonBlack}" Margin="5,5,5,5" Cursor="Hand" Click="b_Num2_Click">2</Button>
        <Button x:Name="b_Num3" Grid.Row="4" Grid.Column="2" FontSize="24" Foreground="White" Style="{DynamicResource RoundedButtonBlack}" Margin="5,5,5,5" Cursor="Hand" Click="b_Num3_Click">3</Button>
        <Button x:Name="b_Num1" Grid.Row="4" Grid.Column="0" FontSize="24" Foreground="White" Style="{DynamicResource RoundedButtonBlack}" Margin="5,5,5,5" Cursor="Hand" Click="b_Num1_Click">1</Button>


        <Button x:Name="b_Plus" Grid.Row="4" Grid.Column="3" FontSize="24" Foreground="White" Style="{DynamicResource RoundedButtonOrange}" Margin="5,5,5,5" Cursor="Hand" Click="b_Plus_Click">+</Button>
        <Button x:Name="b_Num0" Grid.Row="5" Grid.Column="0" FontSize="24" Grid.ColumnSpan="2" Foreground="White" Style="{DynamicResource RoundedButtonBlack}" Margin="5,5,5,5" Cursor="Hand" Click="b_Num0_Click">0</Button>
        <Button x:Name="b_Dot" Grid.Row="5" Grid.Column="2" FontSize="24" Foreground="White" Style="{DynamicResource RoundedButtonBlack}" Margin="5,5,5,5" Cursor="Hand" Click="b_Dot_Click">,</Button>
        <Button x:Name="b_Equal" Grid.Row="5" Grid.Column="3" FontSize="24" Foreground="White" Style="{DynamicResource RoundedButtonOrange}" Margin="5,5,5,5" Cursor="Hand" Click="b_Equal_Click">=</Button>
    </Grid>
</Window>
